name: Production Deployment

permissions:
  contents: read
  actions: read
  id-token: write

env:
  CI: true
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_APP_PROJECT_ID }}
  TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  TURBO_TEAM: ${{ secrets.VERCEL_ORG_ID }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - apps/mobile
      - splash/**

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: '${{ github.workflow }}-${{ github.event.number || github.sha }}'
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/cache@v4
        with:
          path: .turbo
          key: '${{ runner.os }}-turbo-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm build:splash

  tests:
    runs-on: ubuntu-latest
    needs: [build]
    concurrency:
      group: '${{ github.workflow }}-${{ github.event.number || github.sha }}'
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/cache@v4
        with:
          path: .turbo
          key: '${{ runner.os }}-turbo-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm test:splash

  deploy:
    runs-on: ubuntu-latest
    needs: [build, tests]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/cache@v4
        with:
          path: .turbo
          key: '${{ runner.os }}-turbo-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/treasury-deploy-role
          aws-region: eu-west-1

      - run: pnpm cdk:migrations -- deploy --all --require-approval never
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - run: pnpm cdk:network -- deploy --all --require-approval never
        env:
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}

      - run: pnpm cdk:engine -- deploy --all --require-approval never
        env:
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POSTHOG_KEY: ${{ secrets.POSTHOG_KEY }}
          POSTHOG_HOST: ${{ secrets.POSTHOG_HOST }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}

      - run: pnpm cdk:api -- deploy --all --require-approval never
        env:
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_WEBHOOK_SECRET: ${{ secrets.CLERK_WEBHOOK_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          POSTHOG_KEY: ${{ secrets.POSTHOG_KEY }}
          POSTHOG_HOST: ${{ secrets.POSTHOG_HOST }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

      - run: pnpm vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
